{"version":3,"sources":["components/todoItem/todoItem.module.css","components/todoItem/index.js","containers/dashboard/index.js","App.js","reportWebVitals.js","index.js","containers/dashboard/dashboard.module.css"],"names":["module","exports","ToDoItem","className","classes","todo_section","onClick","this","props","delete","title","keyT","React","Component","Dashboard","state","items","addNew","bind","_inputElement","value","newItems","key","Date","now","setState","filterItem","filter","list","dashboard_section","form_section","type","placeholder","ref","a","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,aAAe,iC,2LCI3BC,E,4JAIF,WACI,OAEI,sBAAKC,UAAWC,IAAQC,aAAcC,QAASC,KAAKC,MAAMC,OAA1D,UACI,6BAAKF,KAAKC,MAAME,QAChB,4BAAIH,KAAKC,MAAMG,c,GATRC,IAAMC,WAedX,ICqDAY,E,kDApEX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,MAAO,IAEX,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBALA,E,0CAOlB,WAII,GAAgC,KAA7BX,KAAKY,cAAcC,MAAa,CAC/B,IAAMC,EAAW,CACbX,MAAOH,KAAKY,cAAcC,MAC1BE,IAAKC,KAAKC,OAadjB,KAAKkB,SAAS,CAACT,MAAM,GAAD,mBAAMT,KAAKQ,MAAMC,OAAjB,CAAwBK,MAGhDd,KAAKY,cAAcC,MAAQ,K,oBAK/B,SAAOT,GACH,IAAMe,EAAanB,KAAKQ,MAAMC,MAAMW,QAAO,SAACC,GAAD,OACvCA,EAAKN,MAAQX,KAIjBJ,KAAKkB,SAAS,CAACT,MAAMU,M,oBAGzB,WAAS,IAAD,OACJ,OACI,sBAAKvB,UAAWC,IAAQyB,kBAAxB,UACI,sBAAK1B,UAAWC,IAAQ0B,aAAxB,UACI,uBAAOC,KAAK,OAAOC,YAAY,iBAAiBC,IAAK,SAACC,GAAD,OAAM,EAAKf,cAAgBe,KAChF,wBAAQ5B,QAASC,KAAKU,OAAtB,oBAGJ,8BAECV,KAAKQ,MAAMC,MAAMmB,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAEAlB,MAASkB,EAAKlB,MACdC,KAAQiB,EAAKN,IACbb,OAAU,WAAK,EAAKA,OAAOmB,EAAKN,OAHzBM,EAAKN,iB,GAzDRV,IAAMC,WCSfuB,MAVf,WACE,OACE,8BAEE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfArC,EAAOC,QAAU,CAAC,kBAAoB,qCAAqC,aAAe,mC","file":"static/js/main.4c75d66c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo_section\":\"todoItem_todo_section__3v7RM\"};","import React from 'react';\r\nimport classes from \"./todoItem.module.css\";\r\n\r\n\r\n\r\nclass ToDoItem extends React.Component{\r\n    \r\n    \r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className={classes.todo_section} onClick={this.props.delete}>\r\n                <h1>{this.props.title}</h1>\r\n                <p>{this.props.keyT}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoItem;\r\n\r\n//const filterItems = items.filter((list)=>list.key !==key)\r\n//setState({items:filterItems})\r\n\r\n\r\n// onClick={()=>this.clickB(this.props.keyT)}\r\n// clickB(key){\r\n//     const filterItems = this.state.items.filter((list) => list.key !== key);\r\n// }","import React from 'react';\r\nimport classes from './dashboard.module.css';\r\nimport ToDoItem from \"../../components/todoItem\";\r\n\r\nclass Dashboard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n        }\r\n        this.addNew = this.addNew.bind(this);\r\n    }\r\n    addNew(){\r\n        //get the value from the input\r\n        // console.log(this._inputElement.value);\r\n        //push the value into an array\r\n        if(this._inputElement.value !== \"\"){\r\n            const newItems = {\r\n                title: this._inputElement.value,\r\n                key: Date.now(),\r\n            }\r\n            //get the current items and concat the newItem\r\n            //method 1\r\n            // this.setState(\r\n            //     (prevState)=>{\r\n            //     return{ \r\n            //         items: prevState.items.concat(newItems) \r\n            //     };       \r\n            // }, \r\n            // ()=>console.log(this.state.items));\r\n\r\n            //method 2\r\n            this.setState({items: [...this.state.items, newItems] });\r\n        }\r\n        \r\n        this._inputElement.value = \"\";\r\n    }\r\n\r\n    \r\n\r\n    delete(keyT){\r\n        const filterItem = this.state.items.filter((list) =>\r\n            list.key !== keyT);\r\n        \r\n        //filterItem becomes a new array and then we set state to the new array\r\n        \r\n        this.setState({items:filterItem});\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className={classes.dashboard_section}>\r\n                <div className={classes.form_section}>\r\n                    <input type=\"text\" placeholder=\"Create List...\" ref={(a)=>(this._inputElement = a )}/>\r\n                    <button onClick={this.addNew}>Add</button>\r\n                </div>\r\n\r\n                <div>\r\n\r\n                {this.state.items.map((list)=>(\r\n                    <ToDoItem \r\n                    key = {list.key}\r\n                    title = {list.title}\r\n                    keyT = {list.key}\r\n                    delete = {()=>{this.delete(list.key)}}\r\n                    />\r\n                ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import Dashboard from \"./containers/dashboard\";\n\n\nfunction App() {\n  return (\n    <div>\n\n      <Dashboard />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard_section\":\"dashboard_dashboard_section__3RG-c\",\"form_section\":\"dashboard_form_section__3XQwt\"};"],"sourceRoot":""}